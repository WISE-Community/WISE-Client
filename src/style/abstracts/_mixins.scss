@use 'sass:map';
@use '@angular/material' as mat;
@use 'style/base/typography';

// Define a custom mixin for common styles
@mixin common-setup() {
  h1, h2, .mat-headline-1, .mat-headline-2, .mat-headline-3, .mat-headline-4 {
    font-family: $heading-font-family
  }

  h1 {
    .mat-icon {
      @include mat-icon-size(mat.font-size($wise-typography, 'headline-5'));
    }
  }

  h2 {
    .mat-icon {
      @include mat-icon-size(mat.font-size($wise-typography, 'headline-6'));
    }
  }

  .mat-headline-4 {
      margin-bottom: 36px;

    .mat-icon {
      @include mat-icon-size(mat.font-size($wise-typography, 'subtitle-2'));
    }
  }

  .mat-headline-3 {
    margin-bottom: 40px;

    .mat-icon {
      @include mat-icon-size(mat.font-size($wise-typography, 'subtitle-1'));
    }
  }

  form {
    h1, h2, h3 {
      font-weight: 500;
    }
  }

  .mat-mdc-button, .mat-mdc-raised-button, .mat-mdc-unelevated-button, .mat-mdc-outlined-button {
    min-width: 0;
  }

  .mat-mdc-raised-button, .mat-mdc-fab, .mat-mdc-mini-fab {
    &:not(.mat-mdc-icon-button) {
      &:not([class*=mat-elevation-z]) {
        @include mat.elevation(3);
      }
    }

    &[disabled] {
      box-shadow: none;
    }
  }

  .mat-divider-horizontal {
    margin: 16px 0;
  }

  .mat-mdc-menu-content {
    .mat-divider-horizontal {
      margin: 8px 0;
    }
  }

  .mat-mdc-card-actions {
    margin-left: 0;
    margin-right: 0;
  }

  .mat-mdc-card {
    border-radius: $card-border-radius;
    padding: 16px;

    >.mat-mdc-card-actions:last-child {
      margin-bottom: 0;
    }

    .mat-divider-horizontal {
      margin: 0;
    }
  }
  /* TODO(mdc-migration): The following rule targets internal classes of card that may no longer apply for the MDC version.*/
  .mat-card--button {
    cursor: pointer;
    border-radius: $button-border-radius;
    @include mat.elevation(3);

    &:hover, &:focus {
      @include mat.elevation(4);
    }

    &:hover {
      outline: none;
    }
  }

  .mat-mdc-dialog-container {
    border-radius: $card-border-radius;
  }

  .dialog-content-scroll {
    border-bottom: 1px solid;
    border-top: 1px solid;
  }

  .mat-mdc-dialog-actions {
    padding: 16px 0 0;
    margin-bottom: 0;
  }

  .mat-accordion .mat-expansion-panel {
    @include mat.elevation(3);
    @include mat.elevation-transition;

    &.mat-expanded {
      @include mat.elevation(6);
    }

    &:not(.mat-expanded) {
      border-radius: $button-border-radius;

      .mat-expansion-panel-header {
        border-radius: $button-border-radius;
      }
    }
  }

  .mat-expansion-panel-header {
    font-weight: 500;
  }

  .mat-mdc-form-field {
    font-size: 14px;
  }
  /* TODO(mdc-migration): The following rule targets internal classes of tabs that may no longer apply for the MDC version.*/
  .mat-tab-label-active {
    opacity: 1;
  }

  .mat-toolbar {
    @include mat.typography-level($wise-typography, 'subtitle-1');

    h1, h2, h3, h4, h5 ,h6 {
      @include mat.typography-level($wise-typography, 'subtitle-1');
    }
  }

  .mat-toolbar-row, .mat-toolbar-single-row {
    height: $toolbar-height;
  }

  .mat-toolbar-multiple-rows {
    min-height: $toolbar-height;
  }

  .select-panel-full-height {
    max-height: 80vh;
  }

  td {
    &.mat-mdc-cell, &.mat-mdc-footer-cell, &.mat-mdc-header-cell {
      padding: 4px 8px 4px 0;
    }
  }

  img[snip] {
    cursor: pointer;
  }
}

// Define a custom mixin that takes in the current material theme and colors
@mixin theme-setup($theme, $colors) {
  // Include angular material theme
  // @include mat.all-component-themes($theme);
  // $background: map.get($theme, 'background');
  // $foreground: map.get($theme, 'foreground');

  // Create theme-specific styles
  // color: mat.get-color-from-palette($foreground, 'text');

  a {
    &:not(.mat-mdc-button):not(.mat-mdc-raised-button):not(.mat-mdc-menu-item):not(.mat-mdc-unelevated-button):not(.mat-mdc-outlined-button):not(.mat-mdc-icon-button):not(.mat-mdc-tab-link) {
      color: map.get($colors, 'primary');

      // Set classes for each named color in the $colors map
      @each $key, $value in $colors {
        &.#{$key} {
          color: $value;
        }
      }
    }
  }

  a.active {
    color: map.get($colors, 'primary');
  }

  .app-background {
    background-color: map.get($colors, 'app-bg');
  }

  .app-bar {
    background-color: map.get($background, 'app-bar');
  }

  .avatar--icon {
    background-color: map.get($colors, disabled-text);
  }

  .content-block, .info-block, .notice {
    background-color: map.get($colors, notice-bg);
  }

  .content-block__title {
    border-color: map.get($background, 'focused-button');
  }

  .cta__headline {
    border-color: map.get($colors, 'notice-bg');
  }

  .cta__wrap, .blurb {
    background-color: map.get($background, 'card');
  }

  .can-highlight {
    transition: 1s background-color;
  }

  .mat-mdc-unelevated-button, .mat-mdc-raised-button, .mat-mdc-fab, .mat-mdc-mini-fab {
    &.mat-secondary-text {
      background-color: map.get($foreground, 'secondary-text');
      color: white;
    }

    &.mat-success {
      background-color: map.get($colors, 'success');
      color: map.get($colors, 'success-contrast');
    }

    &.mat-info {
      background-color: map.get($colors, 'info');
      color: map.get($colors, 'info-contrast');
    }
  }

  .dialog-content-scroll {
    background-color: map.get($colors, 'notice-bg');
    border-color: map.get($background, 'background');
  }

  .mat-mdc-menu-item {
    &.active {
      background-color: map.get($background, 'hover');

      .mat-icon {
        color: map.get($colors, 'primary');
      }
    }
  }
  /* TODO(mdc-migration): The following rule targets internal classes of form-field that may no longer apply for the MDC version.*/
  .mat-form-field-prefix, .mat-form-field-suffix {
    color: mat.get-color-from-palette($foreground, 'secondary-text');
  }

  figure {
    &.image {
      border: 1px solid mat.get-color-from-palette($background, 'status-bar');
    }
  }

  // Set classes for each named color in the $colors map
  @each $key, $value in $colors {
      .#{$key} {
        color: $value;
      }

      .#{$key}-bg {
        background-color: $value;
      }

      .#{$key}-border {
        border-color: $value;
      }
  }
}

// Set Angular Material icon size
@mixin mat-icon-size($size: 24px) {
  font-size: $size;
  height: $size;
  width: $size;
  line-height: $size;
}

// Set Angular Material icon button size (use mat-icon size as the $size parameter)
@mixin mat-icon-button-size($size: 24px) {
  $button-size: ($size*1) + 16px;
  height: $button-size;
  width: $button-size;
  line-height: $button-size;

  .mat-icon {
    font-size: $size;
    height: $size;
    width: $size;
    line-height: $size;
  }
}
